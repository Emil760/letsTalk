<Window x:Class="Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:icons ="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:controls ="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:UC="clr-namespace:Client.UserControls"
        mc:Ignorable="d"
        Title="letsTalkWindow" Height="700" Width="1200" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip" WindowStyle="None">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WindowResources/ChatsDictionary.xaml"/>
                <ResourceDictionary Source="/WindowResources/ThemeDictionary.xaml"/>
                <ResourceDictionary Source="/WindowResources/ButtonLoaderTemplate.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="HamburgerMenuOptionsTemplate" DataType="{x:Type controls:HamburgerMenuIconItem}">
                <WrapPanel Margin="5, 8" Cursor="Hand">
                    <ContentControl  x:Name="IconPart"
                                     Width="{Binding ElementName=hamburgerMenu, Path=CompactPaneLength}"
                                     Content="{Binding Path=Icon}"/>

                    <TextBlock       x:Name="TextPart"
                                     VerticalAlignment="Center"
                                     FontSize="18"
                                     Text="{Binding Path=Label}" />
                </WrapPanel>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ElementName=hamburgerMenu, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="HamburgerOptionItemContainerStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="border" Cursor="Hand" Background="{StaticResource HamburgerBackground}">
                                <ContentPresenter/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#CCCCFF"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="HamburgerOptionsItemTemplate" TargetType="ListBoxItem">
                <WrapPanel>
                    <ContentPresenter/>
                </WrapPanel>
            </ControlTemplate>

            <Style x:Key="ChatListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Margin="0,5" Cursor="Hand">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HamburgerStyle" TargetType="controls:HamburgerMenu">
                <Setter Property="IsPaneOpen" Value="False"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="OpenPaneLength" Value="250"/>
                <Setter Property="CompactPaneLength" Value="80"/>
                <Setter Property="PaneBackground" Value="{StaticResource HamburgerBackground}"/>
                <Setter Property="PaneForeground" Value="Gray"/>
            </Style>

            <ControlTemplate x:Key="CloseButtonTemplate" TargetType="Button">
                <Border Cursor="Hand" Background="Transparent">
                    <icons:PackIconMaterialDesign x:Name="icon" Kind="Close" Foreground="{StaticResource ButtonBackground}" Width="25" Height="25"/>
                </Border>
                
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="icon" Property="Foreground" Value="DarkOrange"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="MaximizeButtonTemplate" TargetType="Button">
                <Border Background="Transparent" Cursor="Hand">
                    <icons:PackIconFontAwesome x:Name="icon" Kind="WindowMaximizeRegular" Foreground="{StaticResource ButtonBackground}" Width="25" Height="25"/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="icon" Property="Foreground" Value="DarkOrange"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="MinimizeButtonTemplate" TargetType="Button">
                <Border Background="Transparent" Cursor="Hand">
                    <icons:PackIconFontAwesome x:Name="icon" Kind="WindowMinimizeRegular" Foreground="{StaticResource ButtonBackground}" Width="25" Height="25"/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="icon" Property="Foreground" Value="DarkOrange"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="grid" Background="{StaticResource MainBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="col1"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Click="MinimizedWindow_Click" Margin="0,0,20,0" Template="{StaticResource MinimizeButtonTemplate}"/>
            <Button Click="MaximizedWindow_Click" Margin="0,0,20,0" Template="{StaticResource MaximizeButtonTemplate}"/>
            <Button Click="CloseWindow_Click"  Margin="0,0,20,0" Template="{StaticResource CloseButtonTemplate}"/>
        </StackPanel>

        <controls:HamburgerMenu x:Name="hamburgerMenu"
                                 Grid.Row="1" Grid.Column="0"
                                 OptionsItemTemplate="{StaticResource HamburgerMenuOptionsTemplate}"
                                 OptionsItemContainerStyle="{StaticResource HamburgerOptionItemContainerStyle}"
                                 ItemContainerStyle="{StaticResource ChatListBoxItemStyle}"
                                 ItemTemplateSelector="{StaticResource ChatDataTemplateSelector}"
                                 ItemsSource="{Binding Path=Chats}"
                                 SelectedItem="{Binding Path=SelectedChat}"
                                 Style="{StaticResource HamburgerStyle}">

            <controls:HamburgerMenu.OptionsItemsSource>
                <controls:HamburgerMenuItemCollection>
                    <controls:HamburgerMenuIconItem Tag="UC2" Label="Create Chatroom" Command="{Binding CreateChatCommand}">
                        <controls:HamburgerMenuIconItem.Icon>
                            <icons:PackIconMaterial  Kind="AccountMultiplePlus" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </controls:HamburgerMenuIconItem.Icon>
                    </controls:HamburgerMenuIconItem>

                    <controls:HamburgerMenuIconItem Tag="UCSettings" Label="Settings" Command="{Binding SettingsCommand}">
                        <controls:HamburgerMenuIconItem.Icon>
                            <icons:PackIconMaterial  Kind="Shield" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </controls:HamburgerMenuIconItem.Icon>
                    </controls:HamburgerMenuIconItem>
                </controls:HamburgerMenuItemCollection>
            </controls:HamburgerMenu.OptionsItemsSource>

            <controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <Grid Margin="30,0,0,0">
                        <UC:ChatItem UserName="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Client.UserName}"
                                 Avatar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Client.UserImage}"
                                 IsOnlineVisibility="Hidden">
                        </UC:ChatItem>

                        <Button Cursor="Hand" Margin="7,7,0,0"
                                Command="{Binding Path=DataContext.ChangeAvatarCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                Template="{StaticResource ButtonLoaderTemplate}"/>
                    </Grid>
                </DataTemplate>
            </controls:HamburgerMenu.HamburgerMenuHeaderTemplate>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ItemClick">
                    <i:InvokeCommandAction Command="{Binding SelectedChatChangedCommand}" CommandParameter="{Binding ElementName=hamburgerMenu, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </controls:HamburgerMenu>

    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding ClosedWindowCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>







<!--<controls:HamburgerMenu.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Margin="-1 0 -1 0" Grid.Row="0">
                            <TextBlock Text="{Binding Path=Name}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="Gray"/>
                        </Border>
                    </Grid>
                </DataTemplate>
            </controls:HamburgerMenu.ContentTemplate>-->
