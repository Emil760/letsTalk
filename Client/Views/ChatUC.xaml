<UserControl x:Class="Client.Views.ChatUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:utility="clr-namespace:Client.Utility"
             xmlns:models="clr-namespace:Client.Models"
             xmlns:UC="clr-namespace:Client.UserControls"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WindowResources/MessageDictionary.xaml"/>
                <ResourceDictionary Source="/WindowResources/ThemeDictionary.xaml"/>
                <ResourceDictionary Source="/WindowResources/InputMessageDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <utility:TypeConverter x:Key="TypeConverter"/>

            <Style x:Key="AvatarImageStyle" TargetType="Image">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Chat, Converter={StaticResource TypeConverter}}" Value="{x:Type models:ChatOne}">
                        <Setter Property="Source" Value="{Binding Path=Chat.User.Avatar}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Chat, Converter={StaticResource TypeConverter}}" Value="{x:Type models:ChatGroup}">
                        <Setter Property="Source" Value="{Binding Path=Chat.GroupAvatar}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="GroupButtons" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Chat, Converter={StaticResource TypeConverter}}" Value="{x:Type models:ChatOne}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="ModernCheckBox" TargetType="CheckBox">
                <Border x:Name="border" Width="30" Height="30" Background="DarkRed" BorderBrush="Black" BorderThickness="2" CornerRadius="5">
                    <icons:PackIconMaterialDesign x:Name="icon" Kind="Check" Width="22" Height="22" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="border" Property="Background" Value="GreenYellow"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter TargetName="border" Property="Background" Value="DarkRed"/>
                        <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter TargetName="border" Property="Background" Value="Transparent"/>
                        <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsChecked" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" ShadowDepth="3" BlurRadius="2"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsChecked" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" ShadowDepth="3" BlurRadius="2"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50">
                <RowDefinition.Style>
                    <Style TargetType="RowDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Chat, Converter={StaticResource TypeConverter}}" Value="{x:Type models:ChatOne}">
                                <Setter Property="Height" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <DockPanel LastChildFill="False" Background="{StaticResource MainBackground2}">
            <TextBlock DockPanel.Dock="Left" Margin="20,0,0,0" Text="{Binding Path=Chat.UserIsWriting}" FontSize="30" Foreground="{StaticResource WritingForeground}"/>

            <Image DockPanel.Dock="Right" Style="{StaticResource AvatarImageStyle}"/>
            <Button IsEnabled="{Binding Path=Chat.CanWrite}" DockPanel.Dock="Right" Content="Edit chat" Margin="0,5,25,5" Height="40" Template="{StaticResource ButtonTemplate}" Command="{Binding EditChatCommand}" Width="100">
                <Button.Style>
                    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Chat, Converter={StaticResource TypeConverter}}" Value="{x:Type models:ChatOne}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button DockPanel.Dock="Right" Content="Leave" Margin="0,5,15,5" Height="40" Template="{StaticResource ButtonTemplate}" Command="{Binding LeaveChatCommand}" Width="100"/>

            <CheckBox x:Name="canNotifyCheckBox" IsChecked="{Binding Path=CanNotify}" Cursor="Hand" IsThreeState="True" DockPanel.Dock="Right" Margin="0,0,25,0" Template="{StaticResource ModernCheckBox}" Command="{Binding CanNotifyChangedCommand}" Click="canNotifyCheckBox_Click"/>

            <TextBlock x:Name="canNotifyText" Text="" DockPanel.Dock="Right" Margin="0,0,10,0" VerticalAlignment="Center" FontSize="14"/>
        </DockPanel>

        <Image x:Name="contentLoader" Grid.Row="1" VerticalAlignment="Top" Margin="0,10,0,0" Source="/Resources/loader.png" Visibility="{Binding Path=LoaderVisibility, Mode=TwoWay}" Width="50" Height="50" Panel.ZIndex="1">
            <Image.RenderTransform>
                <RotateTransform x:Name="rotate" Angle="0" CenterX="25" CenterY="25"/>
            </Image.RenderTransform>
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)" From="360" To="0" Duration="0:0:1" RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <ListView x:Name="chatListView"
                  Focusable="True"                  
                  Grid.Row="1"
                  ItemContainerStyle="{StaticResource ListViewItemStyle}"
                  ItemTemplateSelector="{StaticResource MessageSelector}"
                  ItemsSource="{Binding Path=Chat.Messages}"
                  ScrollViewer.CanContentScroll="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.Background>
                <ImageBrush ImageSource="{Binding Path=Settings.SelectedWallpaper}"/>
            </ListView.Background>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ScrollViewer.ScrollChanged">
                    <i:InvokeCommandAction Command="{Binding ScrollChangedCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>

        <Grid Grid.Row="2" Height="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <UC:ActionableContentPresenter x:Name="input" IsEnabled="{Binding Path=Chat.CanWrite}" Content="{Binding Path=InputMessage}" ContentTemplateSelector="{StaticResource InputMessageTemplateSelector}" ContentChanged="input_ContentChanged"/>

            <Button Grid.Column="1" Content="Smile" FontSize="20" IsCancel="{Binding Path=Chat.CanWrite}" Margin="5,0" Template="{StaticResource ButtonTemplate}" Command="{Binding OpenEmojisCommand}"/>

            <Button Grid.Column="2" Content="File" FontSize="20" IsEnabled="{Binding Path=Chat.CanWrite}" Margin="5,0" Template="{StaticResource ButtonTemplate}" Command="{Binding OpenFileCommand}"/>
        </Grid>
    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</UserControl>
