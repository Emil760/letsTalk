<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:u="clr-namespace:Client.Utility"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:models="clr-namespace:Client.Models"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <u:TicksToTime x:Key="TicksToTime"/>
    <u:PathToExtension x:Key="PathToExtension"/>
    <u:PathToName x:Key="PathToName"/>
    <u:TypeConverter x:Key="TypeConverter"/>

    <ControlTemplate x:Key="PlayToggle" TargetType="Button">
        <icons:PackIconMaterial Name="icon" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left"/>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Message.IsPlaying}" Value="True">
                <Setter TargetName="icon" Property="Kind" Value="Stop"/>
                <Setter TargetName="icon" Property="Width" Value="20"/>
                <Setter TargetName="icon" Property="Height" Value="20"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.IsPlaying}" Value="False">
                <Setter TargetName="icon" Property="Kind" Value="Play"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="TextDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="border" BorderBrush="AliceBlue" BorderThickness="4" CornerRadius="15" Margin="10,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row1" Height="0"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" x:Name="group" Text="{Binding Path=Login}" Visibility="Hidden" Margin="15,0" FontSize="12" Foreground="Green"/>
                    <TextBlock Grid.Row="1" Margin="5" Text="{Binding Path=Message.Text}" TextWrapping="Wrap" Foreground="Black" FontSize="18"/>
                    <TextBlock Grid.Row="2" Margin="10, 2" Text="{Binding Path=Message.Date, StringFormat={}{0:hh:mm}}" Foreground="DarkSlateGray" FontSize="12"/>
                </Grid>
            </Border>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="#EF44F2"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="row1" Property="Height" Value="18"/>
                <Setter TargetName="group" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SystemMessage}">
                <Setter TargetName="border" Property="Grid.ColumnSpan" Value="2"/>
                <Setter TargetName="border" Property="Background" Value="#A6A2A6"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Center"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ImageDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border x:Name="border" MaxHeight="400" MaxWidth="400" Width="{Binding ElementName=border, Path=Height}" BorderBrush="AliceBlue" BorderThickness="4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row1" Height="0"/>
                        <RowDefinition x:Name="row2" MinHeight="340"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" x:Name="group" Text="{Binding Path=Login}" Visibility="Hidden" Margin="15, 0" FontSize="12" Foreground="Green"/>
                    <Image Grid.Row="1" Source="{Binding Path=Message.Path}" Stretch="Fill"/>
                    <TextBlock Grid.Row="2" Margin="10, 2" Text="{Binding Path=Message.Date, StringFormat={}{0:hh:mm}}" Foreground="DarkSlateGray" FontSize="12"/>
                </Grid>
            </Border>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="#EF44F2"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="group" Property="Visibility" Value="Visible"/>
                <Setter TargetName="row1" Property="Height" Value="18"/>
                <Setter TargetName="row2" Property="Height" Value="350"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SystemMessage}">
                <Setter TargetName="border" Property="Grid.ColumnSpan" Value="2"/>
                <Setter TargetName="border" Property="Background" Value="#A6A2A6"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Center"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FileDataTemplate">
        <Border x:Name="border" MinWidth="250" Height="80" BorderBrush="AliceBlue" BorderThickness="3" CornerRadius="15">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="row1"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="group" Text="{Binding Path=Login}" Visibility="Hidden" Margin="15, 0" FontSize="12" Foreground="Green"/>
                <Image Grid.Row="1" Grid.Column="0" x:Name="icon" Source="/images/file.png" Width="50" Height="50"/>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=Message.Path, Converter={StaticResource PathToName}}" FontSize="20" Margin="20,0,10,0" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Margin="10, 2" Text="{Binding Path=Message.Date, StringFormat={}{0:hh:mm}}" Foreground="DarkSlateGray" FontSize="12"/>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".txt">
                <Setter TargetName="icon" Property="Source" Value="/images/txt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".pdf">
                <Setter TargetName="icon" Property="Source" Value="/images/pdf.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".pptx">
                <Setter TargetName="icon" Property="Source" Value="/images/ppt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".ppt">
                <Setter TargetName="icon" Property="Source" Value="/images/ppt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".doc">
                <Setter TargetName="icon" Property="Source" Value="/images/doc.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".docx">
                <Setter TargetName="icon" Property="Source" Value="/images/doc.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".xls">
                <Setter TargetName="icon" Property="Source" Value="/images/xls.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.Path, Converter={StaticResource PathToExtension}}" Value=".zip">
                <Setter TargetName="icon" Property="Source" Value="/images/zip.png"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="border" Property="Background" Value="#EF44F2"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="border" Property="Height" Value="90"/>
                <Setter TargetName="row1" Property="Height" Value="18"/>
                <Setter TargetName="group" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SystemMessage}">
                <Setter TargetName="border" Property="Background" Value="#A6A2A6"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Center"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="AudioDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border x:Name="border" MaxWidth="300" Height="60" BorderBrush="AliceBlue" BorderThickness="3" CornerRadius="15">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row1" Height="0"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" x:Name="group" Text="{Binding Path=Login}" Visibility="Hidden" Margin="15, 0" FontSize="12" Foreground="Green"/>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,0">
                        <Button x:Name="btn"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.MediaPlayCommand}"
                        CommandParameter="{Binding BindsDirectlyToSource=True}"
                        Template="{StaticResource PlayToggle}">
                        </Button>

                        <Slider x:Name="slider" Value="{Binding Path=Message.CurrentLength}" Minimum="0" Maximum="{Binding Path=Message.Length}" Margin="30, 5, 10, 5" Style="{StaticResource MahApps.Styles.Slider.Win10}" Width="150">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.MediaPosChangedCommand}" CommandParameter="{Binding BindsDirectlyToSource=True}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>

                        <TextBlock Text="{Binding ElementName=slider, Path=Value, Converter={StaticResource TicksToTime}}" FontSize="15"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding Path=Message.Length, Converter={StaticResource TicksToTime}}" FontSize="15"/>
                    </StackPanel>
                    <TextBlock Grid.Row="2" Margin="10, 0" Text="{Binding Path=Message.Date, StringFormat={}{0:hh:mm}}" Foreground="DarkSlateGray" FontSize="12"/>
                </Grid>
            </Border>

        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="#EF44F2"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#D8BDD9"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="border" Property="Height" Value="80"/>
                <Setter TargetName="row1" Property="Height" Value="18"/>
                <Setter TargetName="group" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SystemMessage}">
                <Setter TargetName="border" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="#A6A2A6"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Center"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <u:MessageTemplateSelector
        x:Key="MessageSelector"
        TextDataTemplate="{StaticResource TextDataTemplate}"
        ImageDataTemplate="{StaticResource ImageDataTemplate}"
        FileDataTemplate="{StaticResource FileDataTemplate}"
        AudioDataTemplate="{StaticResource AudioDataTemplate}">
    </u:MessageTemplateSelector>

    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ContentPresenter x:Name="con" Margin="10"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewStyle" TargetType="ListView">
        <Setter Property="SelectedItem" Value="{Binding Path=SelectedMessage}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemStyle}"/>
        <Setter Property="ItemTemplateSelector" Value="{StaticResource MessageSelector}"/>
        <Setter Property="ItemsSource" Value="{Binding Path=Messages}"/>
        <Setter Property="Background" Value="YellowGreen"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    </Style>

</ResourceDictionary>