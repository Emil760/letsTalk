<controls:MetroWindow x:Class="Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:icons ="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:controls ="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:UC="clr-namespace:Client.UserControls"
        mc:Ignorable="d"
        Title="letsTalkWindow" Height="700" Width="1200" WindowStartupLocation="CenterScreen" WindowTitleBrush="#57394a">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WindowResources/ChatsDictionary.xaml"/>
                <ResourceDictionary Source="/WindowResources/ThemeDictionary.xaml"/>
                <ResourceDictionary Source="/WindowResources/ButtonLoaderTemplate.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="CancelButtonTemplate" TargetType="Button">
                <icons:PackIconMaterialDesign Kind="Cancel" Background="Transparent" Width="25" Height="25" Foreground="{StaticResource ButtonForeground}" Cursor="Hand"/>
            </ControlTemplate>

            <ControlTemplate x:Key="ChangeImageTemplae" TargetType="Button">
                <icons:PackIconMaterialDesign Kind="Photo" Background="Transparent" Width="25" Height="25" Foreground="{StaticResource ButtonForeground}" Cursor="Hand"/>
            </ControlTemplate>

            <!--<ControlTemplate x:Key="AvatarButton" TargetType="Button">
                <Grid Background="Transparent">
                    <Ellipse Width="{TemplateBinding Width}"
                         Height="{TemplateBinding Height}"
                         Cursor="{TemplateBinding Cursor}"
                         Stroke="{TemplateBinding Foreground}"
                         StrokeThickness="3">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding Path=Chat.Avatar}"/>
                        </Ellipse.Fill>
                    </Ellipse>                  
                </Grid>

                <ControlTemplate.Triggers>
                    -->
            <!--<Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="btn1" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="btn2" Property="Visibility" Value="Visible"/>
                    </Trigger>-->
            <!--
                </ControlTemplate.Triggers>
            </ControlTemplate>-->



            <DataTemplate x:Key="HamburgerMenuOptionsTemplate" DataType="{x:Type controls:HamburgerMenuIconItem}">
                <WrapPanel Margin="5, 8" Cursor="Hand">
                    <ContentControl  x:Name="IconPart"
                                     Width="{Binding ElementName=hamburgerMenu, Path=CompactPaneLength}"
                                     Content="{Binding Path=Icon}"/>

                    <TextBlock       x:Name="TextPart"
                                     VerticalAlignment="Center"
                                     FontSize="18"
                                     Text="{Binding Path=Label}" />
                </WrapPanel>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ElementName=hamburgerMenu, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="HamburgerOptionItemContainerStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="border" Cursor="Hand" Background="{StaticResource HamburgerBackground}">
                                <ContentPresenter/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#CCCCFF"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="HamburgerOptionsItemTemplate" TargetType="ListBoxItem">
                <WrapPanel>
                    <ContentPresenter/>
                </WrapPanel>
            </ControlTemplate>

            <Style x:Key="ChatListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Margin="0,5" Cursor="Hand">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HamburgerStyle" TargetType="controls:HamburgerMenu">
                <Setter Property="IsPaneOpen" Value="False"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="OpenPaneLength" Value="250"/>
                <Setter Property="CompactPaneLength" Value="80"/>
                <Setter Property="PaneBackground" Value="{StaticResource HamburgerBackground}"/>
                <Setter Property="PaneForeground" Value="Gray"/>
            </Style>

            <!--<ControlTemplate x:Key="BorderButtonTemplate" TargetType="Button">
                <Border Background="{StaticResource ButtonBackground}"/>
            </ControlTemplate>-->
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="grid" Background="{StaticResource MainBackground}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="col1"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <controls:HamburgerMenu x:Name="hamburgerMenu"
                                 Grid.Column="0"
                                 OptionsItemTemplate="{StaticResource HamburgerMenuOptionsTemplate}"
                                 OptionsItemContainerStyle="{StaticResource HamburgerOptionItemContainerStyle}"
                                 ItemContainerStyle="{StaticResource ChatListBoxItemStyle}"
                                 ItemTemplateSelector="{StaticResource ChatDataTemplateSelector}"
                                 ItemsSource="{Binding Path=Chats}"
                                 SelectedItem="{Binding Path=SelectedChat}"
                                 Style="{StaticResource HamburgerStyle}">

            <controls:HamburgerMenu.OptionsItemsSource>
                <controls:HamburgerMenuItemCollection>
                    <controls:HamburgerMenuIconItem Tag="UC2" Label="Create Chatroom" Command="{Binding CreateChatCommand}">
                        <controls:HamburgerMenuIconItem.Icon>
                            <icons:PackIconMaterial  Kind="AccountMultiplePlus" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </controls:HamburgerMenuIconItem.Icon>
                    </controls:HamburgerMenuIconItem>

                    <controls:HamburgerMenuIconItem Tag="UCSettings" Label="Settings" Command="{Binding SettingsCommand}">
                        <controls:HamburgerMenuIconItem.Icon>
                            <icons:PackIconMaterial  Kind="Shield" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </controls:HamburgerMenuIconItem.Icon>
                    </controls:HamburgerMenuIconItem>
                </controls:HamburgerMenuItemCollection>
            </controls:HamburgerMenu.OptionsItemsSource>

            <controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <Grid Margin="30,0,0,0">
                        <UC:ChatItem UserName="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Client.UserName}"
                                 Avatar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Client.UserImage}"
                                 IsOnlineVisibility="Hidden">
                        </UC:ChatItem>

                        <Button x:Name="btn1" Margin="45,0,0,0" Visibility="Hidden" Template="{StaticResource ChangeImageTemplae}" Command="{Binding Path=DataContext.ChangeAvatarCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>

                        <Button x:Name="btn2" Margin="45,40,0,0" Visibility="Hidden" Template="{StaticResource CancelButtonTemplate}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CancelImageCommand}"/>
                    </Grid>

                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn1" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="btn2" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </controls:HamburgerMenu.HamburgerMenuHeaderTemplate>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ItemClick">
                    <i:InvokeCommandAction Command="{Binding SelectedChatChangedCommand}" CommandParameter="{Binding ElementName=hamburgerMenu, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </controls:HamburgerMenu>

    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding ClosedWindowCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</controls:MetroWindow>