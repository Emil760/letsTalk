<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utility="clr-namespace:Client.Utility"
                    xmlns:models="clr-namespace:Client.Models"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WindowResources/ChatsDictionary.xaml"/>
        <ResourceDictionary Source="/WindowResources/ThemeDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <utility:PathToExtension x:Key="PathToExtension"/>
    <utility:PathToName x:Key="PathToName"/>
    <utility:TypeConverter x:Key="TypeConverter"/>
    <utility:EmojiConverter x:Key="EmojiConverter"/>

    <SolidColorBrush x:Key="DownoadColor" Color="BlanchedAlmond"/>

    <LinearGradientBrush x:Key="ImageDateBackground" EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
        <GradientStop Color="#FF635A5A" Offset="1"/>
        <GradientStop Color="White"/>
    </LinearGradientBrush>

    <Style x:Key="OnlineEllipseStyle" TargetType="Ellipse">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Stroke" Value="Black"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=User.IsOnline}" Value="True">
                <Setter Property="Fill" Value="Green"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=User.IsOnline}" Value="False">
                <Setter Property="Fill" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DownloadButton" TargetType="Button">
        <icons:PackIconMaterialDesign Name="icon" Kind="FileDownload" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Cursor="Hand" Foreground="{StaticResource DownoadColor}"/>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Message.IsLoaded}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PlayToggle" TargetType="Button">
        <icons:PackIconMaterialDesign Name="icon" Kind="PlayCircleFilled" VerticalAlignment="Center" HorizontalAlignment="Left" Cursor="Hand" Width="30" Height="30" Foreground="{StaticResource DownoadColor}"/>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Message.IsLoaded}" Value="True">
                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.MediaPlayCommand}"/>
                <Setter Property="CommandParameter" Value="{Binding BindsDirectlyToSource=True}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.IsLoaded}" Value="False">
                <Setter TargetName="icon" Property="Kind" Value="FileDownload"/>
                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.DownloadFileCommand}"/>
                <Setter Property="CommandParameter" Value="{Binding BindsDirectlyToSource=True}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Message.IsLoaded}" Value="True"/>
                    <Condition Binding="{Binding Path=Message.IsPlaying}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="icon" Property="Kind" Value="PlayCircleFilled"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Message.IsLoaded}" Value="True"/>
                    <Condition Binding="{Binding Path=Message.IsPlaying}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="icon" Property="Kind" Value="Stop"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <DataTemplate x:Key="TextDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="mainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="mainGridCol1" Width="0" MaxWidth="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="ellipseGrid" Grid.Row="0" Grid.Column="0">
                    <Ellipse x:Name="groupImage" Width="50" Height="50" StrokeThickness="2" Stroke="Black"/>
                    <Ellipse Style="{StaticResource OnlineEllipseStyle}"/>
                </Grid>

                <Border x:Name="groupBorder" Grid.Row="0" Grid.Column="1" Margin="15,0,0,0" CornerRadius="10" Background="{StaticResource GroupBackground}" BorderBrush="White" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <TextBlock x:Name="groupText" Text="{Binding Path=User.Name}" FontSize="15" Foreground="Black" FontWeight="DemiBold" Padding="10,0,10,0"/>
                </Border>

                <Border x:Name="border" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" BorderBrush="AliceBlue" BorderThickness="3" CornerRadius="15" Margin="10,20,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <ContentControl x:Name="text" Grid.Row="0" Margin="4,3,4,0">
                            <ContentControl.Content>
                                <MultiBinding Converter="{StaticResource EmojiConverter}">
                                    <Binding Path="Message.Text"/>
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.Settings.ChatFontSize"/>
                                </MultiBinding>
                            </ContentControl.Content>
                        </ContentControl>
                        <TextBlock x:Name="date" Grid.Row="1" Text="{Binding Path=Message.Date, StringFormat={}{0:HH:mm}}" Margin="10, 2" VerticalAlignment="Bottom" HorizontalAlignment="Right" Foreground="{StaticResource DateForeground}" FontSize="12" FontWeight="DemiBold"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource UserMessageBackground}"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="0"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource SourceMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SessionSendedMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource UserMessageBackground}"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource SourceMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="groupBorder" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupText" Property="Foreground" Value="{Binding Path=Color}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.Settings.ShowAvatarInGroupMessages}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="mainGridCol1" Property="Width" Value="60"/>
                    <Setter TargetName="groupImage" Property="Fill">
                        <Setter.Value>
                            <ImageBrush ImageSource="{Binding Path=User.Image}"/>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SystemMessage}">
                <Setter TargetName="mainGrid" Property="Grid.ColumnSpan" Value="2"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="Background" Value="#A6A2A6"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Center"/>
                <Setter TargetName="border" Property="VerticalAlignment" Value="Center"/>
                <Setter TargetName="date" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="text" Property="Grid.RowSpan" Value="2"/>
                <Setter TargetName="text" Property="Margin" Value="4"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=User.Image}" Value="{x:Null}">
                <Setter TargetName="groupImage" Property="Fill">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Resources/x.png"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="groupText" Property="Foreground" Value="Gray"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ImageDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="mainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="mainGridCol1" Width="0" MaxWidth="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="ellipseGrid" Grid.Row="0" Grid.Column="0">
                    <Ellipse x:Name="groupImage" Width="50" Height="50" StrokeThickness="2" Stroke="Black"/>
                    <Ellipse Style="{StaticResource OnlineEllipseStyle}"/>
                </Grid>

                <Border x:Name="groupBorder" Grid.Row="0" Grid.Column="1" Margin="15,0,0,0" CornerRadius="10" Background="{StaticResource GroupBackground}" BorderBrush="White" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <TextBlock x:Name="groupText" Text="{Binding Path=User.Name}" FontSize="15" Foreground="Black" FontWeight="DemiBold" Padding="10,0,10,0"/>
                </Border>

                <Border x:Name="border" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="10,20,0,0" HorizontalAlignment="Left" MaxHeight="300" MaxWidth="300" Width="{Binding ElementName=border, Path=Height}" BorderBrush="AliceBlue" BorderThickness="3">
                    <Grid>
                        <Image Source="{Binding Path=Message.Bitmap}" Stretch="Fill"/>
                        <Button x:Name="loader"
                                Visibility="Hidden"
                                Width="50" Height="50"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.DownloadFileCommand}"
                                CommandParameter="{Binding Path=Message}"
                                Template="{StaticResource DownloadButton}">
                        </Button>
                        <Path Fill="{StaticResource ImageDateBackground}" Data="M70,30 0,30 L70,0" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                        <TextBlock Margin="10, 2" Text="{Binding Path=Message.Date, StringFormat={}{0:HH:mm}}" Foreground="{StaticResource DateForeground}" VerticalAlignment="Bottom" HorizontalAlignment="Right" FontSize="12" FontWeight="DemiBold"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                <Setter TargetName="loader" Property="Visibility" Value="Visible"/>
            </Trigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource UserMessageBackground}"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="0"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource SourceMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SessionSendedMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource UserMessageBackground}"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource SourceMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="groupBorder" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupText" Property="Foreground" Value="{Binding Path=Color}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.Settings.ShowAvatarInGroupMessages}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="mainGridCol1" Property="Width" Value="60"/>
                    <Setter TargetName="groupImage" Property="Fill">
                        <Setter.Value>
                            <ImageBrush ImageSource="{Binding Path=User.Image}"/>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=User.Image}" Value="{x:Null}">
                <Setter TargetName="groupImage" Property="Fill">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Resources/x.png"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="groupText" Property="Foreground" Value="Gray"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FileDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="mainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="mainGridCol1" Width="0" MaxWidth="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="ellipseGrid" Grid.Row="0" Grid.Column="0">
                    <Ellipse x:Name="groupImage" Width="50" Height="50" StrokeThickness="2" Stroke="Black"/>
                    <Ellipse Style="{StaticResource OnlineEllipseStyle}"/>
                </Grid>

                <Border x:Name="groupBorder" Grid.Row="0" Grid.Column="1" Margin="15,0,0,0" CornerRadius="10" Background="{StaticResource GroupBackground}" BorderBrush="White" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <TextBlock x:Name="groupText" Text="{Binding Path=User.Name}" FontSize="15" Foreground="Black" FontWeight="DemiBold" Padding="10,0,10,0"/>
                </Border>

                <Border x:Name="border" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="5,20,0,0" MinWidth="250" Height="60" BorderBrush="AliceBlue" BorderThickness="3" CornerRadius="15">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="col1" Width="0"/>
                            <ColumnDefinition Width="45"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="loader" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Width="35" Height="35" HorizontalContentAlignment="Center" Cursor="Hand" Template="{StaticResource DownloadButton}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.DownloadFileCommand}" CommandParameter="{Binding Path=Message}"/>
                        <Image x:Name="icon" Grid.Column="1" Source="/Resources/Extensions/file.png" Width="40" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <TextBlock Grid.Column="2" Text="{Binding Path=Message.FileName, Converter={StaticResource PathToName}}" FontSize="20" Margin="5,0,0,0" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding Path=Message.Date, StringFormat={}{0:HH:mm}}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,15,0" Foreground="{StaticResource DateForeground}" FontSize="12" FontWeight="DemiBold"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="col1" Property="Width" Value="40"/>
            </Trigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:UserMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="1"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource UserMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SourceMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="0"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource SourceMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:SessionSendedMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="1"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource UserMessageBackground}"/>
                <Setter TargetName="ellipseGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}">
                <Setter TargetName="mainGrid" Property="Grid.Column" Value="0"/>
                <Setter TargetName="border" Property="Background" Value="{StaticResource SourceMessageBackground}"/>
                <Setter TargetName="border" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="groupBorder" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupText" Property="Foreground" Value="{Binding Path=Color}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding BindsDirectlyToSource=True, Converter={StaticResource TypeConverter}}" Value="{x:Type models:GroupMessage}"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.Settings.ShowAvatarInGroupMessages}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="mainGridCol1" Property="Width" Value="60"/>
                    <Setter TargetName="groupImage" Property="Fill">
                        <Setter.Value>
                            <ImageBrush ImageSource="{Binding Path=User.Image}"/>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=User.Image}" Value="{x:Null}">
                <Setter TargetName="groupImage" Property="Fill">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Resources/x.png"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="groupText" Property="Foreground" Value="Gray"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".txt">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/txt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".pdf">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/pdf.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".pptx">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/ppt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".ppt">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/ppt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".doc">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/doc.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".docx">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/doc.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".xls">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/xls.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Message.FileName, Converter={StaticResource PathToExtension}}" Value=".zip">
                <Setter TargetName="icon" Property="Source" Value="/Resources/Extensions/zip.png"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <utility:SourceMessageTemplateSelector
        x:Key="MessageSelector"
        TextDataTemplate="{StaticResource TextDataTemplate}"
        ImageDataTemplate="{StaticResource ImageDataTemplate}"
        FileDataTemplate="{StaticResource FileDataTemplate}">
    </utility:SourceMessageTemplateSelector>

    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ContentPresenter x:Name="con" Margin="10"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>